/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define RAISE 1
#define LOWER 2

// General Layout - numbers reflect positon in matrix, for combos
// ------------------------------------------------------------------------------------------------------
// |  0  |  1  |  2  |  3  |  4  |  5  |                            |  6  |  7  |  8  |  9  | 10  | 11  |
// |  12 |  14 |  15 |  16 |  17 |  18 |                            | 19  | 20  | 21  | 22  | 23  | 23  |
// |  24 |  25 |  26 |  27 |  29 |  29 |  30 |  -  |    |  -  | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
//                   |  -  |  41 |  42 |  43 |  44 |    | 45  | 46  | 47  | 48  |  -  |

/ {
        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <2 3>;
                        bindings = <&kp ESC>;
                };
                combo_del {
                        timeout-ms = <50>;
                        key-positions = <15 16>;
                        bindings = <&kp DEL>;
                };
                combo_dash {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp MINUS>;
                };
                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <16 17>;
                        bindings = <&kp TAB>;
                };
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <7 8>;
                        bindings = <&kp ESC>;
                };
                combo_colon {
                        timeout-ms = <50>;
                        key-positions = <20 21>;
                        bindings = <&kp COLON>;
                };
                combo_underscore {
                        timeout-ms = <50>;
                        key-positions = <35 36>;
                        bindings = <&kp UNDERSCORE>;
                };
                combo_quote {
                        timeout-ms = <50>;
                        key-positions = <34 35>;
                        bindings = <&kp SQT>;
                };
                combo_less_than {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp LT>;
                };
                combo_greater_than {
                        timeout-ms = <50>;
                        key-positions = <21 22>;
                        bindings = <&kp GT>;
                };
        };
	keymap {
		compatible = "zmk,keymap";

                // ----------------------------------------------------------------------------------------------------------------------------------
		// |   ESC   |  Q  |  W  |  E  |   R   |   T   |                                          |   Y   |   U   |  I  |  O  |  P  |    \    |
		// |   TAB   |  A  |  S  |  D  |   F   |   G   |                                          |   H   |   J   |  K  |  L  |  ;  |    '    |
		// | SHIFT/( |  Z  |  X  |  C  |   V   |   B   |  L GUI  |    -    |  |    -    |  R GUI  |   N   |   M   |  ,  |  .  |  /  | SHIFT/) |
		//                       |  -  | L ALT | RAISE |   RET   |  SPACE  |  |  SPACE  |  BSPC   | LOWER | HYPER |  -  |
		default_layer {			
			bindings = <
	&kp ESC        &kp Q &kp W &kp E &kp R    &kp T                                                         &kp Y     &kp U                &kp I     &kp O   &kp P    &kp BSLH
	&mt LCTRL TAB  &kp A &kp S &kp D &kp F    &kp G                                                         &kp H     &kp J                &kp K     &kp L   &kp SEMI &kp SQT
	&mt LSHFT LPAR &kp Z &kp X &kp C &kp V    &kp B     &kp LGUI  &none              &none       &kp RGUI   &kp N     &kp M                &kp COMMA &kp DOT &kp FSLH &mt RSHFT RPAR
	                           &kp A &kp LALT &mo RAISE &kp RET   &kp SPACE          &kp SPACE   &kp BSPC   &mo LOWER &kp LS(LC(LA(LGUI))) &kp A
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
                
                // ----------------------------------------------------------------------------------------------------------------------------------
		// |   ESC   |  1  |  2  |  3  |   4   |   5   |                                          |   6   |  7    |  8  |  9   |   0   |     \   |
		// |   TAB   |  :  |  =  |  {  |   }   |   `   |                                          |   ⬅️  |  ⬇️   |  ⬆️  |  ➡️   |   ;   |     '   |
		// | SHIFT/( |  Z  |  X  |  [  |   ]   |   ~   |  L GUI  |    -    |  |    -    |  R GUI  |   N   |  M    |  ,  |  .   |   /   | SHIFT/) |
		//                       |  -  | L ALT | RAISE |   RET   |  SPACE  |  |  SPACE  |  BSPC   | LOWER | HYPER |  -  |
                raise_layer {			
			bindings = <
	&kp ESC        &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                                        &kp N6    &kp N7               &kp N8    &kp N9    &kp N0   &kp BSLH
	&mt LCTRL TAB  &kp COLON &kp EQUAL &kp LBRC  &kp RBRC  &kp GRAVE                                                     &kp LEFT  &kp DOWN             &kp UP    &kp RIGHT &kp SEMI &mt RCTRL SQT
	&mt LSHFT LPAR &kp Z     &kp X     &kp LBKT  &kp RBKT  &kp TILDE &kp LGUI  &none              &none       &kp RGUI   &kp N     &kp M                &kp COMMA &kp DOT   &kp FSLH &mt RSHFT RPAR
	                                   &kp A     &kp LALT  &mo RAISE &kp RET   &kp SPACE          &kp SPACE   &kp BSPC   &mo LOWER &kp LS(LC(LA(LGUI))) &kp A
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		
                // ----------------------------------------------------------------------------------------------------------------------------------
		// |  -  |  BT 0  |  BT 1  |  BT 2     |  BT 3     |  BT 4    |                                          |   -   |   -   |  -  |  -  |  -  |  -  |
		// |  -  |    -   |   -    |     -     |     -     |    -     |                                          |   -   |   -   |  -  |  -  |  -  |  -  |
		// |  -  |    -   |   -    |  BT NEXT  |  BT PREV  |  BT CLR  |  L GUI  |    -    |  |    -    |  R GUI  |   -   |   -   |  -  |  -  |  -  |  -  |
		//                         |     -     |  L ALT    |  RAIS E  |   RET   |  SPACE  |  |  SPACE  |  BSPC   | LOWER | HYPER |  -  |
                lower_layer {			
			bindings = <
	&none &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                                 &none     &none                &none &none &none &none
	&none &none         &none         &none         &none         &none                                                        &none     &none                &none &none &none &none
	&none &none         &none         &bt BT_NXT    &bt BT_PRV    &bt BT_CLR    &kp LGUI  &none         &none       &kp RGUI   &none     &none                &none &none &none &none
	                                  &kp A         &kp LALT      &mo RAISE     &kp RET   &kp SPACE     &kp SPACE   &kp BSPC   &mo LOWER &kp LS(LC(LA(LGUI))) &kp A
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	};
};
